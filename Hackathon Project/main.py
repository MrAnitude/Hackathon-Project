import os
import spotipy
from flask import Flask, request, redirect, session, url_for
from spotipy.oauth2 import SpotifyOAuth
from dotenv import load_dotenv

# Load environment variables
load_dotenv()
client_id = os.getenv("CLIENT_ID")
client_secret = os.getenv("CLIENT_SECRET")  # Fixed: Corrected variable name from CLIENT_ID_SECRET
redirect_uri = os.getenv("URI")

# Initialize Flask app
app = Flask(__name__)  # Fixed: Changed SoundMate to __name__
app.secret_key = client_secret
app.config['SESSION_COOKIE_NAME'] = 'spotify-login-session'

scope = "playlist-modify-public playlist-modify-private user-top-read"

# Initialize Spotify OAuth with correct variable names
sp_oauth = SpotifyOAuth(client_id=client_id,  # Fixed: Used lowercase variable names
                        client_secret=client_secret,
                        redirect_uri=redirect_uri,
                        scope=scope)

@app.route('/')
def index():
    auth_url = sp_oauth.get_authorize_url()
    return f'<a href="{auth_url}">Login with Spotify</a>'

@app.route('/callback')
def callback():
    code = request.args.get('code')
    token_info = sp_oauth.get_access_token(code, as_dict=True)  # Fixed: Changed as_dict to True for consistency
    session['token_info'] = token_info
    return redirect(url_for('create_playlist'))

@app.route('/create_playlist')
def create_playlist():
    token_info = session.get('token_info', None)
    if not token_info:
        return redirect('/')

    sp = spotipy.Spotify(auth=token_info['access_token'])

    # Get current user ID
    user_id = sp.current_user()['id']

    # Create playlist
    playlist = sp.user_playlist_create(user=user_id,
                                      name="My Personalized Playlist ðŸŽ¶",
                                      public=False,
                                      description="Generated by Flask + Spotipy")

    # Get recommendations
    recs = sp.recommendations(seed_genres=['pop'], limit=10)

    # Add tracks to playlist
    track_uris = [track['uri'] for track in recs['tracks']]
    sp.playlist_add_items(playlist['id'], track_uris)

    return f"Playlist created! Check your Spotify account ðŸŽ‰"

@app.route('/modify_playlist/<playlist_id>/<action>/<track_uri>')
def modify_playlist(playlist_id, action, track_uri):
    token_info = session.get('token_info', None)
    if not token_info:
        return redirect('/')
    
    sp = spotipy.Spotify(auth=token_info['access_token'])

    if action == "add":
        sp.playlist_add_items(playlist_id, [track_uri])
        return f"Added {track_uri}"
    elif action == "remove":
        sp.playlist_remove_all_occurrences_of_items(playlist_id, [track_uri])
        return f"Removed {track_uri}"
    else:
        return "Invalid action"

if __name__ == '__main__':  # Fixed: Corrected syntax for main check
    app.run(debug=True)
